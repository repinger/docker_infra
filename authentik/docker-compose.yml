name: "authentik"

services:
  authentik-postgres:
    image: docker.io/library/postgres:alpine
    container_name: "authentik-postgres"
    environment:
      POSTGRES_USER: "${AUTHENTIK_POSTGRES_USER:-authentik}"
      POSTGRES_PASSWORD: "${AUTHENTIK_POSTGRES_PASSWORD:?error}"
      POSTGRES_DB: "${AUTHENTIK_POSTGRES_DB:-authentik}"
      TZ: "${TZ:-UTC}"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "${AUTHENTIK_POSTGRES_USER:-authentik}"']
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 5
    hostname: "authentik-postgres"
    networks:
      - "infra-1"
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    restart: "always"

  authentik-redis:
    image: docker.io/library/redis:alpine
    container_name: "authentik-redis"
    command: --save 60 1 --loglevel warning
    environment:
      TZ: "${TZ:-UTC}"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    hostname: "authentik-redis"
    networks:
      - "infra-1"
    restart: "always"
    volumes:
      - ./redis:/data

  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    container_name: "authentik-server"
    command: "server"
    depends_on:
      authentik-postgres:
        condition: "service_healthy"
      authentik-redis:
        condition: "service_healthy"
    environment:
      AUTHENTIK_REDIS__HOST: "authentik-redis"
      AUTHENTIK_POSTGRESQL__HOST: "authentik-postgres"
      AUTHENTIK_POSTGRESQL__USER: "${AUTHENTIK_POSTGRES_USER:-authentik}"
      AUTHENTIK_POSTGRESQL__NAME: "${AUTHENTIK_POSTGRES_DB:-authentik}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "${AUTHENTIK_POSTGRES_PASSWORD:?error}"
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY:?error}"
      TZ: "${TZ:-UTC}"
    hostname: "authentik-server"
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.net-internal.ipallowlist.sourcerange: "${PRIVATE_IPV4_SUBNET}, ${PRIVATE_IPV6_SUBNET}, ${DOCKER_NET_IPV4_SUBNET}, ${DOCKER_NET_IPV6_SUBNET}"
      traefik.http.routers.authentik-server.entrypoints: "websecure"
      traefik.http.routers.authentik-server.middlewares: "net-internal"
      traefik.http.routers.authentik-server.rule: "Host(`${AUTHENTIK_DOMAIN}`)"
      traefik.http.routers.authentik-server.service: "authentik-server"
      traefik.http.routers.authentik-server.tls: "true"
      traefik.http.services.authentik-server.loadbalancer.server.port: "9000"
    networks:
      - "infra-1"
    restart: "always"
    user: "${AUTHENTIK_USER_ID}"
    volumes:
      - "./authentik/media:/media"
      - "./authentik/templates:/templates"

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: "authentik-worker"
    command: "worker"
    depends_on:
      authentik-postgres:
        condition: "service_healthy"
      authentik-redis:
        condition: "service_healthy"
    environment:
      AUTHENTIK_REDIS__HOST: "authentik-redis"
      AUTHENTIK_POSTGRESQL__HOST: "authentik-postgres"
      AUTHENTIK_POSTGRESQL__USER: "${AUTHENTIK_POSTGRES_USER:-authentik}"
      AUTHENTIK_POSTGRESQL__NAME: "${AUTHENTIK_POSTGRES_DB:-authentik}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "${AUTHENTIK_POSTGRES_PASSWORD:?error}"
      AUTHENTIK_SECRET_KEY: "${AUTHENTIK_SECRET_KEY:?error}"
      TZ: "${TZ:-UTC}"
    hostname: "authentik-worker"
    networks:
      - "infra-1"
    restart: "always"
    user: "${AUTHENTIK_USER_ID}"
    volumes:
      - "./authentik/media:/media"
      - "./authentik/templates:/templates"
      - "/var/run/docker.sock:/var/run/docker.sock"
